// Input: head -> 3 -> 7 -> 5 -> 7 -> 3
// Output: true
// Explanation: 37573 is a palindrome.
// Input: head -> 1 -> 1 -> 2 -> 1
// Output: false
// Explanation: 1121 is not a palindrome.


public class Main
{
    static class LinkedList{
        Node head;
        Node tail;
        class Node{
            Node next;
            int data;
            public Node(int data){
                this.data=data;
                this.next=null;
            }
        }
        public void add(int data){
            Node newNode=new Node(data);
            if(head==null){
                head=tail=newNode;
            }
            else{
                newNode.next=head;
                head=newNode;
            }
        }
        public void printList(){
            if(head==null){
                System.out.println("List is Empty");
                return;
            }
            Node temp=head;
            while(temp!=null){
                System.out.print(temp.data+" ");
                temp=temp.next;
            }
            System.out.println();
        }
        public boolean isPalindrome() {
            if (head == null || head.next == null) return true;

            // Step 1: Find middle using slow-fast pointer
            Node slow = head, fast = head;
            while (fast != null && fast.next != null) {
                slow = slow.next;
                fast = fast.next.next;
            }

            // Step 2: Reverse second half
            Node prev = null, curr = slow, next;
            while (curr != null) {
                next = curr.next;
                curr.next = prev;
                prev = curr;
                curr = next;
            }

            // Step 3: Compare first half & reversed second half
            Node left = head, right = prev;
            while (right != null) {
                if (left.data != right.data) return false;
                left = left.next;
                right = right.next;
            }

            return true;
        }
    }
	public static void main(String[] args) {
	    LinkedList li=new LinkedList();
	    li.add(10);
	    li.add(20);
	    li.add(30);
	    li.printList();
		System.out.println("Is Palindrome? " + li.isPalindrome()); // false
		
		LinkedList li1=new LinkedList();
	    li1.add(10);
	    li1.add(20);
	    li1.add(10);
	    li1.printList();
		System.out.println("Is Palindrome? " + li1.isPalindrome()); // true
	}
}
