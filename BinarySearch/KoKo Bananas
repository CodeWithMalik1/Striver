// // Input: n = 4, nums = [7, 15, 6, 3], h = 8

// // Output: 5

// // Explanation: If Koko eats 5 bananas/hr, he will take 2, 3, 2, and 1 hour to eat the piles accordingly. So, he will take 8 hours to complete all the piles.  

// // Input: n = 5, nums = [25, 12, 8, 14, 19], h = 5

// // Output: 25

// Explanation: If Koko eats 25 bananas/hr, he will take 1, 1, 1, 1, and 1 hour to eat the piles accordingly. So, he will take 5 hours to complete all the piles.


public class Main
{
    public static int calculateTotalHours(int[] v, int hourly) {
        int totalH = 0;
        int n = v.length;
        //find total hours:
        for (int i = 0; i < n; i++) {
            totalH += Math.ceil((double)(v[i]) / (double)(hourly));
        }
        return totalH;
    }
    
    
    public static int minimumRateToEatBananas(int[] nums, int h) {
        int ind=0;
        int low=nums[0];
        int high=nums[0];
     while(ind<nums.length){
         if(nums[ind]<low) low=nums[ind];
         if(nums[ind]>high) high=nums[ind];
         ind++;
     }
    //  return low+high;
    while(low<=high){
        int mid=(low+high)/2;
        int totalHours=calculateTotalHours(nums,mid);
        if(totalHours<=h){
            high=mid-1;
        }
        else{
            low=mid+1;
        }
        
    }
    return low;
   
    }
	public static void main(String[] args) {
	    int nums[] = {7, 15, 6, 3};
	    int h = 8;
		System.out.println(minimumRateToEatBananas(nums,h));
	}
}
